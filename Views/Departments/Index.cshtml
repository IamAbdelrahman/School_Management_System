@using School_Management_System.ViewModel  
@{  
	ViewData["Title"] = "Departments";    
}  
@model List<DepartmentViewModel>  
<h2 class="mb-4">🏢 Departments</h2>  

<a asp-action="Create" class="btn btn-success mb-3">➕ Add New Department</a> 
<div class="row mb-3">
    <div class="col-md-6">
        <input type="text" id="searchInput" class="form-control" placeholder="Search by department name...">
    </div>
</div>

<table class="table table-striped table-bordered shadow">  
	<thead class="table-dark text-center">  
		<tr>  
			<th class="text-center">NO.</th>  
            <th class="text-center">ID</th>
			<th class="text-center">Department Name</th>  
			<th class="text-center">Courses</th>
			<th class="text-center">Teacher</th>	
			<th>Actions</th>  
		</tr>  
	</thead>  
	<tbody>  
		@if (Model != null && Model.Any())
        {
            int i = 0;
            foreach (var department in Model)
            {
                <tr class=" align-middle department-row" data-name="@department.Name.ToLower()">
                    <td class="text-center">@i</td>
                    <td>@department.DepartmentID</td>  
					<td>@department.Name</td>
					<td>@department.Courses</td> 
					<td>@department.Teachers</td>

					<td class="text-center">  
						<a asp-action="Details" asp-route-id="@department.DepartmentID" class="btn btn-info btn-sm mx-1">  
							<i class="bi bi-eye"></i> View  
						</a>  
						<a asp-action="Edit" asp-route-id="@department.DepartmentID" class="btn btn-warning btn-sm mx-1">  
							<i class="bi bi-pencil-square"></i> Edit  
						</a>  
						<a asp-action="Delete" asp-route-id="@department.DepartmentID" class="btn btn-danger btn-sm mx-1">  
							<i class="bi bi-trash"></i> Delete  
						</a>  
					</td>  
				</tr>   
                i++;
			}  
		}  
		else  
		{  
			<tr>  
				<td colspan="4" class="text-center text-muted">No departments available.</td>  
			</tr>  
		}  
	</tbody>  
</table>

@section Scripts {
    <script>
        $(document).ready(function() {
            let currentPage = 1;
            const allRows = $('.department-row');
            let visibleRows = allRows;
            const rowsPerPage = 5;

            function showPage(page) {
                const totalPages = Math.ceil(visibleRows.length / rowsPerPage);
                if (page < 1) page = 1;
                if (page > totalPages) page = totalPages;
                currentPage = page;

                const startIndex = (page - 1) * rowsPerPage;
                const endIndex = startIndex + rowsPerPage;

                allRows.hide();
                visibleRows.slice(startIndex, endIndex).show();
                updatePagination();
            }

            function updatePagination() {
                const totalPages = Math.ceil(visibleRows.length / rowsPerPage);
                const pagination = $('#pagination');
                pagination.empty();

                if (totalPages <= 1) {
                    pagination.hide();
                    return;
                }
                pagination.show();

                pagination.append(`
                    <li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
                        <a class="page-link" href="#" aria-label="Previous" data-page="${currentPage - 1}">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                `);

                for (let i = 1; i <= totalPages; i++) {
                    pagination.append(`
                        <li class="page-item ${i === currentPage ? 'active' : ''}">
                            <a class="page-link" href="#" data-page="${i}">${i}</a>
                        </li>
                    `);
                }

                pagination.append(`
                    <li class="page-item ${currentPage === totalPages ? 'disabled' : ''}">
                        <a class="page-link" href="#" aria-label="Next" data-page="${currentPage + 1}">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                `);
            }

            $('#searchInput').on('keyup', function() {
                const searchText = $(this).val().toLowerCase();

                if (searchText === '') {
                    visibleRows = allRows;
                } else {
                    visibleRows = allRows.filter(function() {
                        return $(this).data('name').includes(searchText);
                    });
                }

                currentPage = 1;
                showPage(currentPage);
            });

            $(document).on('click', '.page-link', function(e) {
                e.preventDefault();
                const page = $(this).data('page');
                if (!isNaN(page)) {
                    showPage(parseInt(page));
                }
            });

            showPage(currentPage);
        });
    </script>
}