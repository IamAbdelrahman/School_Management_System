@using School_Management_System.ViewModel

@model IEnumerable<TeacherViewModel>
@{
    ViewData["Title"] = "Teachers";
}
<h2>Teachers</h2>

<a asp-action="Create" class="btn btn-primary mb-3">Add New Teacher</a>
<div class="row mb-3">
    <div class="col-md-6">
        <input type="text" id="searchInput" class="form-control" placeholder="Search by teacher name...">
    </div>
</div>

<table class="table table-striped table-bordered shadow" id="teachersTable">
     <thead class="table-dark text-center">
        <tr>
             <th>No</th>
            <th>ID</th>
            <th>Name</th>
            <th>Email</th>
            <th>Phone</th>
            <th>Hire Date</th>
            <th>Role</th>
            <th>Department</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody id="tableBody">
        @if (Model != null && Model.Any())
        {
            int i = 1;
        @foreach (var teacher in Model)
        {
            <tr class="teacher-row" data-name="@teacher.Name.ToLower()">
                <td class="text-center">@i</td>
                <td>@teacher.Id</td>
                <td>@teacher.Name</td>
                <td>@teacher.Email</td>
                <td>@teacher.Phone</td>
                <td>@teacher.HireDate</td>
                <td>@teacher.Role</td>
                <td>@teacher.DepartmentName</td>
                <td>
                    <a asp-action="Details" asp-route-id="@teacher.Id" class="btn btn-info btn-sm">Details</a>
                    <a asp-action="Edit" asp-route-id="@teacher.Id" class="btn btn-warning btn-sm">Edit</a>
                    <a asp-action="Delete" asp-route-id="@teacher.Id" class="btn btn-danger btn-sm">Delete</a>
                </td>
            </tr>
        }
        i++;
        }
        else
        {
            <tr>
                <td colspan="9" class="text-center">No teachers found.</td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script>
        $(document).ready(function() {
            let currentPage = 1;
            const allRows = $('.teacher-row');
            let visibleRows = allRows;
            const rowsPerPage = 5;

            function showPage(page) {
                const totalPages = Math.ceil(visibleRows.length / rowsPerPage);
                if (page < 1) page = 1;
                if (page > totalPages) page = totalPages;
                currentPage = page;

                const startIndex = (page - 1) * rowsPerPage;
                const endIndex = startIndex + rowsPerPage;

                allRows.hide();
                visibleRows.slice(startIndex, endIndex).show();
                updatePagination();
            }

            function updatePagination() {
                const totalPages = Math.ceil(visibleRows.length / rowsPerPage);
                const pagination = $('#pagination');
                pagination.empty();

                if (totalPages <= 1) {
                    pagination.hide();
                    return;
                }
                pagination.show();

                pagination.append(`
                    <li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
                        <a class="page-link" href="#" aria-label="Previous" data-page="${currentPage - 1}">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                `);

                for (let i = 1; i <= totalPages; i++) {
                    pagination.append(`
                        <li class="page-item ${i === currentPage ? 'active' : ''}">
                            <a class="page-link" href="#" data-page="${i}">${i}</a>
                        </li>
                    `);
                }

                pagination.append(`
                    <li class="page-item ${currentPage === totalPages ? 'disabled' : ''}">
                        <a class="page-link" href="#" aria-label="Next" data-page="${currentPage + 1}">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                `);
            }

            $('#searchInput').on('keyup', function() {
                const searchText = $(this).val().toLowerCase();

                if (searchText === '') {
                    visibleRows = allRows;
                } else {
                    visibleRows = allRows.filter(function() {
                        return $(this).data('name').includes(searchText);
                    });
                }

                currentPage = 1;
                showPage(currentPage);
            });

            $(document).on('click', '.page-link', function(e) {
                e.preventDefault();
                const page = $(this).data('page');
                if (!isNaN(page)) {
                    showPage(parseInt(page));
                }
            });

            showPage(currentPage);
        });
    </script>
}