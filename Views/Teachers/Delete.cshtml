@model School_Management_System.ViewModel.TeacherViewModel

@{
    ViewData["Title"] = "Delete Teacher";
    var hasClasses = Model.ClassCount > 0;
    var hasCourses = Model.CourseCount > 0;
    var hasAssignments = hasClasses || hasCourses;
}

<h2 class="mb-4 text-danger">🗑️ Delete Teacher</h2>

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">
        @TempData["Error"]
    </div>
}

<div class="card border-danger shadow-sm">
    <div class="card-body">
        <div class="alert alert-danger">
            @if (hasAssignments)
            {
                <strong>⚠️ You cannot delete this teacher because they are assigned to classes or courses.</strong>
            }
            else
            {
                <span>Are you sure you want to delete this teacher?</span>
            }
        </div>

        <dl class="row">
            <dt class="col-sm-3">Name</dt>
            <dd class="col-sm-9">@Model.Name</dd>

            <dt class="col-sm-3">Department</dt>
            <dd class="col-sm-9">@Model.DepartmentName</dd>

            <dt class="col-sm-3">Class Count</dt>
            <dd class="col-sm-9">@Model.ClassCount</dd>

            <dt class="col-sm-3">Course Count</dt>
            <dd class="col-sm-9">@Model.CourseCount</dd>
        </dl>

        @if (!hasAssignments)
        {
            <form asp-action="Delete" asp-route-id="@Model.Id" method="post">
                <input type="hidden" asp-for="Id" />
                <button type="submit" class="btn btn-danger">🗑️ Delete</button>
                <a asp-action="Index" class="btn btn-secondary">↩️ Cancel</a>
            </form>
        }
        else
        {
            <a asp-action="Index" class="btn btn-secondary">↩️ Back to List</a>
        }
    </div>
</div>